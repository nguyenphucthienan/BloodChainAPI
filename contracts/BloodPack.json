{
  "contractName": "BloodPack",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "createdAt",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_id",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"createdAt\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_id\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\\r\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\\r\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call\\r `onlyOwner` functions anymore. Can only be called by the current owner.\\r      * NOTE: Renouncing ownership will leave the contract without an owner,\\r thereby removing any functionality that is only available to the owner.\\r\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`).\\r Can only be called by the current owner.\\r\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/BloodPack.sol\":\"BloodPack\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/BloodPack.sol\":{\"keccak256\":\"0xab99c2ab88c5cf0f35ed5129613d0d7db68dd4a1a21b3289ce10e37331609202\",\"urls\":[\"bzzr://a113582006cc4215f827e5f6e836ed2e57353f778cad5978f114564a39ce4177\"]},\"/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/openzeppelin/math/SafeMath.sol\":{\"keccak256\":\"0x9194acaa467da3228cea42c3168b23fae17941800328032108e3153d1a0fbb5f\",\"urls\":[\"bzzr://f9ed5b3ee80bc2b256d4855cc637a522e6dc61b2eb672f2a710e8aba026f1ed6\"]},\"/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/openzeppelin/ownership/Ownable.sol\":{\"keccak256\":\"0xe01be1e32b863591832610e5a84b48c4f676e245fbefdffe5be0bb0e47fc7e26\",\"urls\":[\"bzzr://95933af9a0a6005ded67c38ec74903580f90a39f2ff9637c593e40ce5b912f31\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107d53803806107d58339810180604052602081101561003357600080fd5b81019080805164010000000081111561004b57600080fd5b8201602081018481111561005e57600080fd5b815164010000000081118282018710171561007857600080fd5b505060008054600160a060020a0319163317808255604051929550600160a060020a0316935091507f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360008054600160a060020a0319163317905580516100ea9060019060208401906101c9565b50610104426103e864010000000061049161010d82021704565b60025550610264565b600082151561011e575060006101c3565b82820282848281151561012d57fe5b04146101c057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f7700000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b90505b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061020a57805160ff1916838001178555610237565b82800160010185558215610237579182015b8281111561023757825182559160200191906001019061021c565b50610243929150610247565b5090565b61026191905b80821115610243576000815560010161024d565b90565b610562806102736000396000f3fe6080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a6811461007c5780638da5cb5b146100935780638f32d59b146100c4578063af640d0f146100ed578063cf09e0d014610177578063f2fde38b1461019e575b600080fd5b34801561008857600080fd5b506100916101d1565b005b34801561009f57600080fd5b506100a8610286565b60408051600160a060020a039092168252519081900360200190f35b3480156100d057600080fd5b506100d9610295565b604080519115158252519081900360200190f35b3480156100f957600080fd5b506101026102a6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018357600080fd5b5061018c610333565b60408051918252519081900360200190f35b3480156101aa57600080fd5b50610091600480360360208110156101c157600080fd5b5035600160a060020a0316610339565b6101d9610295565b151561022f576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081565b60025481565b610341610295565b1515610397576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6103a0816103a3565b50565b600160a060020a0381161515610429576040805160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008215156104a257506000610530565b8282028284828115156104b157fe5b041461052d576040805160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f7700000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b90505b9291505056fea165627a7a72305820ae9be5d156d92acc69a5d98ebe7ba698529322cd19ae8b688afe32ee32528b8a0029",
  "deployedBytecode": "0x6080604052600436106100775763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a6811461007c5780638da5cb5b146100935780638f32d59b146100c4578063af640d0f146100ed578063cf09e0d014610177578063f2fde38b1461019e575b600080fd5b34801561008857600080fd5b506100916101d1565b005b34801561009f57600080fd5b506100a8610286565b60408051600160a060020a039092168252519081900360200190f35b3480156100d057600080fd5b506100d9610295565b604080519115158252519081900360200190f35b3480156100f957600080fd5b506101026102a6565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561013c578181015183820152602001610124565b50505050905090810190601f1680156101695780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018357600080fd5b5061018c610333565b60408051918252519081900360200190f35b3480156101aa57600080fd5b50610091600480360360208110156101c157600080fd5b5035600160a060020a0316610339565b6101d9610295565b151561022f576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b60018054604080516020600284861615610100026000190190941693909304601f8101849004840282018401909252818152929183018282801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b505050505081565b60025481565b610341610295565b1515610397576040805160e560020a62461bcd02815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6103a0816103a3565b50565b600160a060020a0381161515610429576040805160e560020a62461bcd02815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60008215156104a257506000610530565b8282028284828115156104b157fe5b041461052d576040805160e560020a62461bcd02815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f60448201527f7700000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b90505b9291505056fea165627a7a72305820ae9be5d156d92acc69a5d98ebe7ba698529322cd19ae8b688afe32ee32528b8a0029",
  "sourceMap": "121:260:1:-;;;246:132;8:9:-1;5:2;;;30:1;27;20:12;5:2;246:132:1;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;246:132:1;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;687:6:5;:19;;-1:-1:-1;;;;;;687:19:5;696:10;687:19;;;;722:40;;246:132:1;;-1:-1:-1;;;;;;755:6:5;;-1:-1:-1;687:6:5;-1:-1:-1;722:40:5;;687:6;;722:40;296:6:1;:19;;-1:-1:-1;;;;;;296:19:1;305:10;296:19;;;326:8;;;;296:19;;326:8;;;;;:::i;:::-;-1:-1:-1;357:13:1;:3;365:4;357:7;;;;;;:13;:::i;:::-;345:9;:25;-1:-1:-1;121:260:1;;1750:470:4;1808:7;2052:6;;2048:47;;;-1:-1:-1;2082:1:4;2075:8;;2048:47;2119:5;;;2123:1;2119;:5;2143;;;;;;;;:10;2135:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2211:1;-1:-1:-1;1750:470:4;;;;;:::o;121:260:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;121:260:1;;;-1:-1:-1;121:260:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "121:260:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:140:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1668:140:5;;;;;;851:87;;8:9:-1;5:2;;;30:1;27;20:12;5:2;851:87:5;;;;;;;;-1:-1:-1;;;;;851:87:5;;;;;;;;;;;;;;1225:92;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1225:92:5;;;;;;;;;;;;;;;;;;;;;;193:16:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;193:16:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;193:16:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;216:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;216:21:1;;;;;;;;;;;;;;;;;;;;1963:117:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1963:117:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1963:117:5;-1:-1:-1;;;;;1963:117:5;;;1668:140;1071:9;:7;:9::i;:::-;1063:54;;;;;;;-1:-1:-1;;;;;1063:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:1;1751:6;;1730:40;;-1:-1:-1;;;;;1751:6:5;;;;1730:40;;1767:1;;1730:40;1798:1;1781:19;;-1:-1:-1;;1781:19:5;;;1668:140::o;851:87::-;889:15;924:6;-1:-1:-1;;;;;924:6:5;;851:87::o;1225:92::-;1265:4;1303:6;-1:-1:-1;;;;;1303:6:5;1289:10;:20;;1225:92::o;193:16:1:-;;;;;;;;;;;;;;;-1:-1:-1;;193:16:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;216:21::-;;;;:::o;1963:117:5:-;1071:9;:7;:9::i;:::-;1063:54;;;;;;;-1:-1:-1;;;;;1063:54:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2044:28;2063:8;2044:18;:28::i;:::-;1963:117;:::o;2186:237::-;-1:-1:-1;;;;;2268:22:5;;;;2260:73;;;;;-1:-1:-1;;;;;2260:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2370:6;;;2349:38;;-1:-1:-1;;;;;2349:38:5;;;;2370:6;;;2349:38;;;2398:6;:17;;-1:-1:-1;;2398:17:5;-1:-1:-1;;;;;2398:17:5;;;;;;;;;;2186:237::o;1750:470:4:-;1808:7;2052:6;;2048:47;;;-1:-1:-1;2082:1:4;2075:8;;2048:47;2119:5;;;2123:1;2119;:5;2143;;;;;;;;:10;2135:56;;;;;-1:-1:-1;;;;;2135:56:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2211:1;-1:-1:-1;1750:470:4;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./openzeppelin/ownership/Ownable.sol\";\r\nimport \"./openzeppelin/math/SafeMath.sol\";\r\n\r\ncontract BloodPack is Ownable {\r\n    using SafeMath for uint256;\r\n\r\n    string public id;\r\n    uint public createdAt;\r\n\r\n    constructor (string memory _id) public {\r\n        _owner = msg.sender;\r\n        id = _id;\r\n        createdAt = now.mul(1000);\r\n    }\r\n}\r\n",
  "sourcePath": "D:\\Workspace\\GitHub\\THESIS\\BloodChainContracts\\contracts\\BloodPack.sol",
  "ast": {
    "absolutePath": "/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/BloodPack.sol",
    "exportedSymbols": {
      "BloodPack": [
        136
      ]
    },
    "id": 137,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 102,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/openzeppelin/ownership/Ownable.sol",
        "file": "./openzeppelin/ownership/Ownable.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 137,
        "sourceUnit": 454,
        "src": "27:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/openzeppelin/math/SafeMath.sol",
        "file": "./openzeppelin/math/SafeMath.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 137,
        "sourceUnit": 343,
        "src": "75:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 105,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 453,
              "src": "143:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$453",
                "typeString": "contract Ownable"
              }
            },
            "id": 106,
            "nodeType": "InheritanceSpecifier",
            "src": "143:7:1"
          }
        ],
        "contractDependencies": [
          453
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 136,
        "linearizedBaseContracts": [
          136,
          453
        ],
        "name": "BloodPack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 109,
            "libraryName": {
              "contractScope": null,
              "id": 107,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 342,
              "src": "164:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$342",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "158:27:1",
            "typeName": {
              "id": 108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "177:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 111,
            "name": "id",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "193:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 110,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "193:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 113,
            "name": "createdAt",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "216:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "216:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "285:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "296:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "305:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "305:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "296:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "296:19:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "326:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "331:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "326:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "326:8:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "createdAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "345:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "365:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "357:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 295,
                        "src": "357:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "357:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "345:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "345:25:1"
                }
              ]
            },
            "documentation": null,
            "id": 135,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "259:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:19:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:1"
            },
            "scope": 136,
            "src": "246:132:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 137,
        "src": "121:260:1"
      }
    ],
    "src": "0:383:1"
  },
  "legacyAST": {
    "absolutePath": "/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/BloodPack.sol",
    "exportedSymbols": {
      "BloodPack": [
        136
      ]
    },
    "id": 137,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 102,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/openzeppelin/ownership/Ownable.sol",
        "file": "./openzeppelin/ownership/Ownable.sol",
        "id": 103,
        "nodeType": "ImportDirective",
        "scope": 137,
        "sourceUnit": 454,
        "src": "27:46:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/D/Workspace/GitHub/THESIS/BloodChainContracts/contracts/openzeppelin/math/SafeMath.sol",
        "file": "./openzeppelin/math/SafeMath.sol",
        "id": 104,
        "nodeType": "ImportDirective",
        "scope": 137,
        "sourceUnit": 343,
        "src": "75:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 105,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 453,
              "src": "143:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$453",
                "typeString": "contract Ownable"
              }
            },
            "id": 106,
            "nodeType": "InheritanceSpecifier",
            "src": "143:7:1"
          }
        ],
        "contractDependencies": [
          453
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 136,
        "linearizedBaseContracts": [
          136,
          453
        ],
        "name": "BloodPack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 109,
            "libraryName": {
              "contractScope": null,
              "id": 107,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 342,
              "src": "164:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$342",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "158:27:1",
            "typeName": {
              "id": 108,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "177:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 111,
            "name": "id",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "193:16:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 110,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "193:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 113,
            "name": "createdAt",
            "nodeType": "VariableDeclaration",
            "scope": 136,
            "src": "216:21:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 112,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "216:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 134,
              "nodeType": "Block",
              "src": "285:93:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 118,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 346,
                      "src": "296:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 119,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 468,
                        "src": "305:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 120,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "305:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "296:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 122,
                  "nodeType": "ExpressionStatement",
                  "src": "296:19:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "326:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 124,
                      "name": "_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 115,
                      "src": "331:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "326:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 126,
                  "nodeType": "ExpressionStatement",
                  "src": "326:8:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 127,
                      "name": "createdAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 113,
                      "src": "345:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31303030",
                          "id": 130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "365:4:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 128,
                          "name": "now",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 470,
                          "src": "357:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mul",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 295,
                        "src": "357:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "357:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "345:25:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 133,
                  "nodeType": "ExpressionStatement",
                  "src": "345:25:1"
                }
              ]
            },
            "documentation": null,
            "id": 135,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 115,
                  "name": "_id",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "259:17:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 114,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "258:19:1"
            },
            "returnParameters": {
              "id": 117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:1"
            },
            "scope": 136,
            "src": "246:132:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 137,
        "src": "121:260:1"
      }
    ],
    "src": "0:383:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-07-21T04:07:39.309Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner.\r"
      },
      "owner()": {
        "details": "Returns the address of the current owner.\r"
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call\r `onlyOwner` functions anymore. Can only be called by the current owner.\r      * NOTE: Renouncing ownership will leave the contract without an owner,\r thereby removing any functionality that is only available to the owner.\r"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`).\r Can only be called by the current owner.\r"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}